{
  

  
  

  
      "page1": {
          "title": "About",
          "content": "Check README for a summary of all my work with relevant links. Resume. I am active on fastai forums and pytorch forums. . Deep Learning Researcher with interest in Computer Vision, Natural Language Processing and Reinforcement Learning. Have worked with GANs, style transfer, image-to-image translation, colorizing segmentation maps, object detection, classification. Currently trying to expand my knowledge in the field of Computer Vision by exploring new topics in the field and experimenting with the stuff. A fan of fastai courses and an active member of fastai community. . Completed B.Tech. in Electronics and Communication Engineering from Punjab Engineering College, Chandigarh, India (2016-2020). Won Techgig Code Gladiators competition in Artificial Intelligence theme. I was also part of Skill India program where I participated in IT Software Solutions for Business in 2018 and made it to the North-Zone Nationals. . I am a national level handball player having played handball for five years from class 8 to 12. . You can reach me at kushajreal@gmail.com. .",
          "url": "https://kushajveersingh.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "Notebooks",
          "content": "I use Pytorch and fastai as my main deep learning libraries. Check this repo for more details. . Summary of few of my jupyter notebooks . Mish activation function is tested for transfer learning. Here mish is used only in the last fully-connected layers of a pretrainened Resnet50 model. I test the activation function of CIFAR10, CIFAR100 using three different learning rate values. I found that Mish gave better results than ReLU. notebook, paper . | Multi Sample Dropout is implemented and tested on CIFAR-100 using cyclic learning. My losses converged 4x faster when using num_samples=8 than using simple dropout. notebook, paper . | Data Augmentation in Computer Vision Notebook implementing single image data augmentation techniques using just Python notebook | . | Summarizing Leslie N. Smith’s research in cyclic learning and hyper-parameter setting techniques. notebook A disciplined approach to neural network hyper-parameters: Part 1 – learning rate, batch size, momentum, and weight decay paper | Super-Convergence: Very Fast Training of Neural Networks Using Learning Rates paper | Exploring loss function topology with cyclical learning rates paper | Cyclical Learning Rates for Training Neural Networks paper | . | Photorealisitc Style Transfer. Implementation of the High-Resolution Network for Photorealistic Style Transfer paper. notebook, paper . | Weight Standardization is implemented and tested using cyclic learning. I find that it does not work well with cyclic learning when using CIFAR-10. notebook, paper . | Learning Rate Finder. Implementation of learning rate finder as introduced in the paper Cyclical Learning Rates for Training Neural Networks. A general template for custom models is provided. notebook . | PyTorch computer vision tutorial. AlexNet with tips and checks on how to train CNNs. The following things are included: notebook Dataloader creation | Plotting dataloader results | Weight Initialization | Simple training loop | Overfitting a mini-batch | . | How to deal with outliers . | How to choose number of bins in a histogram | .",
          "url": "https://kushajveersingh.github.io/blog/notebooks/",
          "relUrl": "/notebooks/",
          "date": ""
      }
      
  

  
      ,"page4": {
          "title": "Projects",
          "content": "I use Pytorch and fastai as my main deep learning libraries. Check this repo for more details. . Unsupervised Parking Lot Detection . A complete approach to detect parking lot spaces from images and then tell which spaces are occupied or not. Here I do not use any dataset for training my model to detect parking spaces. My implementation can be divided into these three modules: . Object Detection Module :- Use COCO pretrained model, no need to do finetuning. | Label Processing Module :- As out model is not finetuned, there are some tricks that I add to overcome these limitations | Classification Module :- Use the processed labels/bounding_boxes to tell if that parking space is occupied or not. | . | SPADE by Nvidia . Unofficial implementation of SPDAE for image-to-translation from segmentation maps to the colored pictures. Due to compute limit I test it out for a simplified model on Cityscapes dataset and get descent results after 80 epochs with batch_size=2. . | Waste Seggregation using trashnet . Contains the code to train models for trashnet and then export them using ONNX. It was part of a bigger project where we ran these models on Rasberry Pi, which controlled wooden planks to classify the waste into different categories (code for rasberry pi not included here). . | Unscramble game . Python script to solve the unscramble android game. You are given 5 random letters and you have to find 3-letter, 4-letter, 5-letter english words from these 5 random letters. It is a simple brute force method with a english dictionary lookup. . | Random Duty List . A PHP and MySQL based work where the aim is to assign duties from a list to various stations and make sure the duties are not repeated and the repetition occurs only after the list is exhasuted. . | .",
          "url": "https://kushajveersingh.github.io/blog/projects/",
          "relUrl": "/projects/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://kushajveersingh.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}